{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCAA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IA2IM,EACA,EA5IA,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAc,SAAS,gBAAgB,CAAC,YACxC,EAAY,SAAS,gBAAgB,CAAC,YAEtC,EAAO,SAAS,aAAa,CAAC,OAEpC,CAAA,EAAK,SAAS,CAAG,oBACjB,EAAK,MAAM,CAAG,IACd,EAAK,MAAM,CAAG,OAEd,EAAK,SAAS,CAAI,mpBAgBlB,EAAK,MAAM,CAAC,GAEZ,IAAM,EAAmB,SACvB,CAAA,CACA,CAAA,CACA,CAAA,CACA,CAJF,EAKE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAO,GAED,EAAU,SAAS,aAAa,CAAC,MAEvC,CAAA,EAAQ,SAAS,CAAG,gBAAqB,MAAA,CAAL,GACpC,EAAQ,OAAO,CAAC,EAAE,CAAG,eACrB,EAAQ,KAAK,CAAC,GAAG,CAAG,GAAU,MAAA,CAAP,EAAO,MAC9B,EAAQ,KAAK,CAAC,KAAK,CAAG,GAAY,MAAA,CAAT,EAAS,MAElC,EAAQ,SAAS,CAAI,6BAEd,MAAA,CADe,EAAM,oBACT,MAAA,CAAZ,EAAY,cAEnB,EAAK,MAAM,CAAC,GAEZ,WAAW,WACT,EAAQ,MAAM,CAAG,CAAA,CACnB,EAAG,IACL,EAsDA,EAAK,gBAAgB,CAAC,SAAU,SAAC,CAAjC,EACE,EAAE,cAAc,GAEhB,IAAM,EAAO,OAAO,WAAW,CAAC,IAAI,SAAS,GAAM,OAAO,IAE1D,GAxDA,AAAI,AAwDW,EAxDF,IAAI,CAAC,IAAI,GAAG,MAAM,CAAG,GAChC,EACE,IACA,GACA,SACA,8CACA,SAGK,CAAA,GAGJ,AA4CU,EA5CD,QAAQ,CAAC,IAAI,GAYvB,AAAmB,EAAnB,CAAC,AAgCU,EAhCD,MAAM,EAClB,EACE,IACA,GACA,SACA,mCACA,SAGK,CAAA,IAGL,CAAA,AAAgB,GAAhB,CAAC,AAoBU,EApBD,GAAG,EAAS,CAAC,AAoBZ,EApBqB,GAAG,CAAG,EAAA,IACxC,EACE,IACA,GACA,SACA,iCACA,SAGK,CAAA,IAhCP,EACE,IACA,GACA,SACA,kCACA,SAGK,CAAA,IAuCT,IAAM,EAAS,SAAS,aAAa,CAAC,MAChC,EAAkB,OAAO,EAAK,MAAM,EAAE,cAAc,CAAC,QAE3D,CAAA,EAAO,SAAS,CAAG,eAEX,MAAA,CADA,EAAK,IAAI,CAAC,qBAEV,MAAA,CADA,EAAK,QAAQ,CAAC,qBAEd,MAAA,CADA,EAAK,MAAM,CAAC,qBAEX,MAAA,CADD,EAAK,GAAG,CAAC,sBACQ,MAAA,CAAhB,EAAgB,eAGzB,EAAM,MAAM,CAAC,GAEb,EACE,IACA,GACA,WACA,2BACA,WAEF,EAAK,KAAK,GACZ,GAGM,EAAe,KACf,EAAY,CAAA,EAEhB,EAAY,OAAO,CAAC,SAAC,CAAA,CAAY,CAAjC,EACE,EAAW,gBAAgB,CAAC,QAAS,WAC/B,IAAiB,EACnB,EAAY,CAAC,GAEb,EAAe,EACf,EAAY,CAAA,GAGd,IAAM,EAAa,EAAI,GAAW,IAAI,CAAC,SAAC,CAAA,CAAM,CAA9C,EACE,IAAM,EAAQ,EAAK,QAAQ,CAAC,EAAM,CAAC,WAAW,CACxC,EAAQ,EAAK,QAAQ,CAAC,EAAM,CAAC,WAAW,CAQ9C,MAAO,AAPQ,CAAA,EAAM,QAAQ,CAAC,KAC1B,WAAW,EAAM,OAAO,CAAC,QAAS,KAClC,CAFJ,EAGe,CAAA,EAAM,QAAQ,CAAC,KAC1B,WAAW,EAAM,OAAO,CAAC,QAAS,KAClC,CAFJ,EAIyB,EAAI,EAC/B,GAEI,GACF,EAAW,OAAO,GAEpB,AAAA,EAAM,MAAM,CAAZ,KAAA,CAAA,EAAa,EAAG,GAClB,EACF,GAKF,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,EAAU,OAAO,CAAC,SAAC,CAAnB,EAA2B,OAAA,EAAI,SAAS,CAAC,MAAM,CAAC,S,GAChD,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,SAAS,CAAC,GAAG,CAAC,SACvC,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var body = document.querySelector(\"body\");\n    var table = document.querySelector(\"tbody\");\n    var headerItems = document.querySelectorAll(\"thead th\");\n    var tableRows = document.querySelectorAll(\"tbody tr\");\n    var form = document.createElement(\"form\");\n    form.className = \"new-employee-form\";\n    form.action = \"#\";\n    form.method = \"post\";\n    form.innerHTML = '\\n    <label>Name: <input data-qa=\"name\" name=\"name\" type=\"text\"></label>\\n    <label>Position: <input data-qa=\"position\" name=\"position\" type=\"text\"></label>\\n    <label>Office: <select data-qa=\"office\" name=\"office\">\\n      <option>Tokyo</option>\\n      <option>Singapore</option>\\n      <option>London</option>\\n      <option>New York</option>\\n      <option>Edinburgh</option>\\n      <option>San Francisco</option>\\n      </select>\\n    </label>\\n    <label>Age: <input data-qa=\"age\" name=\"age\" type=\"number\"></label>\\n    <label>Salary: <input data-qa=\"salary\" name=\"salary\" type=\"number\"></label>\\n    <button type=\"submit\">Save to table</button>\\n  ';\n    body.append(form);\n    var pushNotification = function(posTop, posRight, title, description) {\n        var type = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : \"\";\n        var message = document.createElement(\"div\");\n        message.className = \"notification \".concat(type);\n        message.dataset.qa = \"notification\";\n        message.style.top = \"\".concat(posTop, \"px\");\n        message.style.right = \"\".concat(posRight, \"px\");\n        message.innerHTML = '\\n      <h2 class=\"title\">'.concat(title, \"</h2>\\n      <p>\").concat(description, \"</p>\\n    \");\n        body.append(message);\n        setTimeout(function() {\n            message.hidden = true;\n        }, 2000);\n    };\n    var checkData = function(formData) {\n        if (formData.name.trim().length < 4) {\n            pushNotification(500, 10, \"Error!\", \"The name should contain at least 4 letters.\", \"error\");\n            return false;\n        }\n        if (!formData.position.trim()) {\n            pushNotification(500, 10, \"Error!\", \"Position field cannot be empty!\", \"error\");\n            return false;\n        }\n        if (+formData.salary < 0) {\n            pushNotification(500, 10, \"Error!\", \"Salary field cannot be negative!\", \"error\");\n            return false;\n        }\n        if (+formData.age < 18 || +formData.age > 90) {\n            pushNotification(500, 10, \"Error!\", \"Age must be between 18 and 90.\", \"error\");\n            return false;\n        }\n        return true;\n    };\n    form.addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        var data = Object.fromEntries(new FormData(form).entries());\n        if (!checkData(data)) return;\n        var newRow = document.createElement(\"tr\");\n        var formattedSalary = Number(data.salary).toLocaleString(\"en-US\");\n        newRow.innerHTML = \"\\n      <td>\".concat(data.name, \"</td>\\n      <td>\").concat(data.position, \"</td>\\n      <td>\").concat(data.office, \"</td>\\n      <td>\").concat(data.age, \"</td>\\n      <td>$\").concat(formattedSalary, \"</td>\\n    \");\n        table.append(newRow);\n        pushNotification(500, 10, \"Success!\", \"Employee has been added!\", \"success\");\n        form.reset();\n    });\n    var sortTable = function() {\n        var currentIndex = null;\n        var isReverse = false;\n        headerItems.forEach(function(headerItem, index) {\n            headerItem.addEventListener(\"click\", function() {\n                var _table;\n                if (currentIndex === index) isReverse = !isReverse;\n                else {\n                    currentIndex = index;\n                    isReverse = false;\n                }\n                var sortedRows = _to_consumable_array(tableRows).sort(function(row1, row2) {\n                    var cell1 = row1.children[index].textContent;\n                    var cell2 = row2.children[index].textContent;\n                    var value1 = cell1.includes(\"$\") ? parseFloat(cell1.replace(/[$,]/g, \"\")) : cell1;\n                    var value2 = cell2.includes(\"$\") ? parseFloat(cell2.replace(/[$,]/g, \"\")) : cell2;\n                    return value1 > value2 ? 1 : -1;\n                });\n                if (isReverse) sortedRows.reverse();\n                (_table = table).append.apply(_table, _to_consumable_array(sortedRows));\n            });\n        });\n    };\n    sortTable();\n    table.addEventListener(\"click\", function(e) {\n        tableRows.forEach(function(row) {\n            return row.classList.remove(\"active\");\n        });\n        e.target.closest(\"tr\").classList.add(\"active\");\n    });\n});\n\n//# sourceMappingURL=index.6f173b30.js.map\n","document.addEventListener('DOMContentLoaded', () => {\n  const body = document.querySelector('body');\n  const table = document.querySelector('tbody');\n  const headerItems = document.querySelectorAll('thead th');\n  const tableRows = document.querySelectorAll('tbody tr');\n\n  const form = document.createElement('form');\n\n  form.className = 'new-employee-form';\n  form.action = '#';\n  form.method = 'post';\n\n  form.innerHTML = `\n    <label>Name: <input data-qa=\"name\" name=\"name\" type=\"text\"></label>\n    <label>Position: <input data-qa=\"position\" name=\"position\" type=\"text\"></label>\n    <label>Office: <select data-qa=\"office\" name=\"office\">\n      <option>Tokyo</option>\n      <option>Singapore</option>\n      <option>London</option>\n      <option>New York</option>\n      <option>Edinburgh</option>\n      <option>San Francisco</option>\n      </select>\n    </label>\n    <label>Age: <input data-qa=\"age\" name=\"age\" type=\"number\"></label>\n    <label>Salary: <input data-qa=\"salary\" name=\"salary\" type=\"number\"></label>\n    <button type=\"submit\">Save to table</button>\n  `;\n  body.append(form);\n\n  const pushNotification = (\n    posTop,\n    posRight,\n    title,\n    description,\n    type = '',\n  ) => {\n    const message = document.createElement('div');\n\n    message.className = `notification ${type}`;\n    message.dataset.qa = 'notification';\n    message.style.top = `${posTop}px`;\n    message.style.right = `${posRight}px`;\n\n    message.innerHTML = `\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n    `;\n    body.append(message);\n\n    setTimeout(() => {\n      message.hidden = true;\n    }, 2000);\n  };\n\n  const checkData = (formData) => {\n    if (formData.name.trim().length < 4) {\n      pushNotification(\n        500,\n        10,\n        'Error!',\n        'The name should contain at least 4 letters.',\n        'error',\n      );\n\n      return false;\n    }\n\n    if (!formData.position.trim()) {\n      pushNotification(\n        500,\n        10,\n        'Error!',\n        'Position field cannot be empty!',\n        'error',\n      );\n\n      return false;\n    }\n\n    if (+formData.salary < 0) {\n      pushNotification(\n        500,\n        10,\n        'Error!',\n        'Salary field cannot be negative!',\n        'error',\n      );\n\n      return false;\n    }\n\n    if (+formData.age < 18 || +formData.age > 90) {\n      pushNotification(\n        500,\n        10,\n        'Error!',\n        'Age must be between 18 and 90.',\n        'error',\n      );\n\n      return false;\n    }\n\n    return true;\n  };\n\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const data = Object.fromEntries(new FormData(form).entries());\n\n    if (!checkData(data)) {\n      return;\n    }\n\n    const newRow = document.createElement('tr');\n    const formattedSalary = Number(data.salary).toLocaleString('en-US');\n\n    newRow.innerHTML = `\n      <td>${data.name}</td>\n      <td>${data.position}</td>\n      <td>${data.office}</td>\n      <td>${data.age}</td>\n      <td>$${formattedSalary}</td>\n    `;\n\n    table.append(newRow);\n\n    pushNotification(\n      500,\n      10,\n      'Success!',\n      'Employee has been added!',\n      'success',\n    );\n    form.reset();\n  });\n\n  const sortTable = () => {\n    let currentIndex = null;\n    let isReverse = false;\n\n    headerItems.forEach((headerItem, index) => {\n      headerItem.addEventListener('click', () => {\n        if (currentIndex === index) {\n          isReverse = !isReverse;\n        } else {\n          currentIndex = index;\n          isReverse = false;\n        }\n\n        const sortedRows = [...tableRows].sort((row1, row2) => {\n          const cell1 = row1.children[index].textContent;\n          const cell2 = row2.children[index].textContent;\n          const value1 = cell1.includes('$')\n            ? parseFloat(cell1.replace(/[$,]/g, ''))\n            : cell1;\n          const value2 = cell2.includes('$')\n            ? parseFloat(cell2.replace(/[$,]/g, ''))\n            : cell2;\n\n          return value1 > value2 ? 1 : -1;\n        });\n\n        if (isReverse) {\n          sortedRows.reverse();\n        }\n        table.append(...sortedRows);\n      });\n    });\n  };\n\n  sortTable();\n\n  table.addEventListener('click', (e) => {\n    tableRows.forEach((row) => row.classList.remove('active'));\n    e.target.closest('tr').classList.add('active');\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","document","addEventListener","currentIndex","isReverse","body","querySelector","table","headerItems","querySelectorAll","tableRows","form","createElement","className","action","method","innerHTML","append","pushNotification","posTop","posRight","title","description","type","arguments","message","concat","dataset","qa","style","top","right","setTimeout","hidden","e","preventDefault","data","fromEntries","FormData","entries","formData","trim","position","salary","age","newRow","formattedSalary","Number","toLocaleString","office","reset","forEach","headerItem","index","sortedRows","sort","row1","row2","cell1","children","textContent","cell2","value1","includes","parseFloat","replace","reverse","apply","row","classList","remove","target","closest","add"],"version":3,"file":"index.6f173b30.js.map"}